[{"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\index.js":"1","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\App.js":"2","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\reportWebVitals.js":"3","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\users\\ListUsersScreen.js":"5","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\models\\userModel.js":"6","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\services\\userService.js":"7","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\http\\http.js":"8","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\redux\\store\\index.js":"9","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\redux\\reducers\\usersReducer.js":"10","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\redux\\actions\\usuarioAction.js":"11","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\redux\\types\\index.js":"12","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\http\\clientAxios.js":"13","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\routers\\appRouter.js":"14","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\routers\\dashboardRoutes.js":"15","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\routers\\auth.js":"16","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\shared\\Layout.js":"17","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\shared\\Main.js":"18","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\shared\\NavBar.js":"19","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\messages.js":"20","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\home\\HomeScreen.js":"21","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\shared\\Header.js":"22","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\users\\NewUserScreen.js":"23","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\dynamics\\FormScreen.js":"24","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\events\\manageEvents.js":"25","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\utils\\commonValidators.js":"26","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\auth\\LoginScreen.js":"27"},{"size":1166,"mtime":1613108388080,"results":"28","hashOfConfig":"29"},{"size":628,"mtime":1612742305116,"results":"30","hashOfConfig":"29"},{"size":364,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":5064,"mtime":499162500000,"results":"32","hashOfConfig":"29"},{"size":1848,"mtime":1612717282486,"results":"33","hashOfConfig":"29"},{"size":1560,"mtime":1612681667975,"results":"34","hashOfConfig":"29"},{"size":1566,"mtime":1612738321718,"results":"35","hashOfConfig":"29"},{"size":1854,"mtime":1612579178721,"results":"36","hashOfConfig":"29"},{"size":1800,"mtime":1612276129980,"results":"37","hashOfConfig":"29"},{"size":2331,"mtime":1612582571326,"results":"38","hashOfConfig":"29"},{"size":440,"mtime":1612276195750,"results":"39","hashOfConfig":"29"},{"size":1073,"mtime":1612582571212,"results":"40","hashOfConfig":"29"},{"size":219,"mtime":1612284554360,"results":"41","hashOfConfig":"29"},{"size":706,"mtime":1613097431694,"results":"42","hashOfConfig":"29"},{"size":708,"mtime":1612719714216,"results":"43","hashOfConfig":"29"},{"size":666,"mtime":1612590869218,"results":"44","hashOfConfig":"29"},{"size":1084,"mtime":1612680528209,"results":"45","hashOfConfig":"29"},{"size":1123,"mtime":1612683479842,"results":"46","hashOfConfig":"29"},{"size":4438,"mtime":1612801858048,"results":"47","hashOfConfig":"29"},{"size":1372,"mtime":1612801929454,"results":"48","hashOfConfig":"29"},{"size":119,"mtime":1612664213568,"results":"49","hashOfConfig":"29"},{"size":411,"mtime":1612756806963,"results":"50","hashOfConfig":"29"},{"size":3052,"mtime":1612802441155,"results":"51","hashOfConfig":"29"},{"size":13618,"mtime":1613107877879,"results":"52","hashOfConfig":"29"},{"size":940,"mtime":1612713162062,"results":"53","hashOfConfig":"29"},{"size":313,"mtime":1612766397776,"results":"54","hashOfConfig":"29"},{"size":5774,"mtime":1613111867307,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cwjovt",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\index.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\App.js",[],["118","119"],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\reportWebVitals.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\users\\ListUsersScreen.js",["120"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport userModel from '../../../domain/models/userModel';\r\nimport {userService} from '../../../domain/services/userService';\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { useDemoData } from '@material-ui/x-grid-data-generator';\r\nimport {Alert, AlertTitle } from '@material-ui/lab';\r\nimport {Box} from \"@material-ui/core\";\r\n\r\nconst ListUsersScreen = () => {\r\n\r\n    const [usersEffect, setUsersEffect] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const userConfigs = new userModel({});\r\n\r\n    // data para demo ya que servicio usuarios esta fallando\r\n    const { data } = useDemoData({\r\n        dataSet: 'Commodity',\r\n        rowLength: 100,\r\n        maxColumns: 6,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(!loaded){\r\n            userService.getAllUsers(() => alert(\"error\")).then( data => {\r\n                setUsersEffect(data);\r\n                setLoaded(true);\r\n                setError(\"Ocurrio un problema cargando los usuarios\");\r\n            });\r\n        }\r\n    },[loaded]);\r\n\r\n    return(\r\n        <Fragment>\r\n            {\r\n                error !== '' &&\r\n                <Alert severity=\"error\" onClose={() => {setError('')}}>\r\n                    <AlertTitle>Error</AlertTitle>\r\n                    {error} — <strong>Por favor intenta más tarde!</strong>\r\n                </Alert>\r\n            }\r\n\r\n            <Box mt={3} />\r\n            <DataGrid\r\n                marginTop={3}\r\n                {...data}\r\n                filterModel={userConfigs.filterModel}\r\n                showToolbar\r\n                components={{\r\n                    Toolbar: GridToolbar,\r\n                }}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListUsersScreen;","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\models\\userModel.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\services\\userService.js",["121"],"import UserModel from '../models/userModel';\r\nimport {getUsers} from '../redux/actions/usuarioAction';\r\nimport http from \"../../infrastructure/http/http\";\r\n\r\nconst api = 'pasaportedigital-security/';\r\n\r\nconst newUSer = (user, callback) => {\r\n    let userResponse = {};\r\n    return http.post(api + \"Users\", user)\r\n        .then(resp => {\r\n            userResponse = new UserModel(resp.data);\r\n            const response = {\r\n                data: userResponse,\r\n                status: resp.status,\r\n                errorMessage: resp.status === 200 ? \"\" : manageErrors(resp.status)\r\n            }\r\n            if(callback)\r\n                callback(resp.status);\r\n            return response;\r\n        });\r\n}\r\n\r\nconst getAllUsers = (callback) => {\r\n    //http.setUrl('');//modificar url en caso de que haya otro servicio\r\n    let response = {};\r\n    return http.get(api + \"Users\").then(resp => {\r\n        getUsers(resp.status === 200 ? resp.data : null);\r\n        response = {\r\n            data: resp.data,\r\n            status: resp.status,\r\n            errorMessage: resp.status === 200 ? \"\" : manageErrors(resp.status)\r\n        }\r\n        if(callback)\r\n            callback(resp.status);\r\n        return response;\r\n    });\r\n}\r\n\r\nconst manageErrors = (errorCode) => {\r\n    switch (errorCode) {\r\n        case 404:\r\n            return \"Servicio no responde ...\"\r\n        break;\r\n        default:\r\n            return \"Estamos trabajando para mejorar el servicio, por favor vuelve más tarde\";\r\n    }\r\n}\r\n\r\nexport const userService = {\r\n    getAllUsers,\r\n    newUSer\r\n}","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\http\\http.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\redux\\store\\index.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\redux\\reducers\\usersReducer.js",["122","123"],"import {\r\n    ADD_USER,\r\n    BEGIN_GET_USERS,\r\n    DOWNLOAD_USERS_SUCCESS,\r\n    DOWNLOAD_USERS_ERROR,\r\n    GET_USER_DELETE,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_ERROR,\r\n    GET_USER_EDIT,\r\n    USER_EDIT_SUCCESS,\r\n    EDIT_USER_ERROR,\r\n    USER_REGISTER,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_ERROR, ADD_USER_SUCCESS, ADD_USER_ERROR\r\n} from \"../types\";\r\n\r\n\r\nconst initialState = {\r\n    users: [],\r\n    error: null,\r\n    loading: false,\r\n    userDelete: null,\r\n    userEdit: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_REGISTER:\r\n        case BEGIN_GET_USERS:\r\n        case ADD_USER:\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            };\r\n        case ADD_USER_SUCCESS:\r\n        case USER_REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users: [...state.users, action.payload],\r\n            };\r\n        case ADD_USER_ERROR:\r\n        case DOWNLOAD_USERS_ERROR:\r\n        case DELETE_USER_ERROR:\r\n        case EDIT_USER_ERROR:\r\n        case USER_REGISTER_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case DOWNLOAD_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                users: action.payload,\r\n            };\r\n        case GET_USER_DELETE:\r\n            return {\r\n                ...state,\r\n                userDelete: action.payload\r\n            }\r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(user => user.id !== state. userDelete),\r\n                userDelete: null\r\n            }\r\n        case GET_USER_EDIT:\r\n            return {\r\n                ...state,\r\n                userEdit: action.payload\r\n            }\r\n        case USER_EDIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userEdit:null,\r\n                users: state.users.map(user =>\r\n                    user.id === action.payload.id ? user = action.payload : user\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\redux\\actions\\usuarioAction.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\domain\\redux\\types\\index.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\http\\clientAxios.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\routers\\appRouter.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\routers\\dashboardRoutes.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\routers\\auth.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\shared\\Layout.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\shared\\Main.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\shared\\NavBar.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\messages.js",["124"],"export default {\r\n    ar: {\r\n        title: 'رياكت پرو سايد بار',\r\n        sidebarTitle: 'پرو سايد بار',\r\n        description: 'شريط جانبي مع قوائم منسدلة وعدد غير محدود من القوائم الفرعية المتداخلة',\r\n        dashboard: 'لوحة القيادة',\r\n        components: 'مكونات',\r\n        dropdown: 'اسقاط',\r\n        submenu: 'قائمة فرعية',\r\n        multiLevel: 'متعدد المستويات',\r\n        collapsed: 'انطوى',\r\n        rtl: 'ر ت ل',\r\n        image: 'صورة الخلفية',\r\n        new: 'جديد',\r\n        withPrefix: 'مع البادئة',\r\n        withSuffix: 'مع اللاحقة',\r\n        viewSource: 'عرض الكود',\r\n    },\r\n    es: {\r\n        title: 'Pasaporte Digital',\r\n        sidebarTitle: 'Pasaporte Digital',\r\n        description:\r\n            'React sidebar library with dropdown menus and unlimited number of nested submenus',\r\n        dashboard: 'Dashboard',\r\n        components: 'Components',\r\n        dropdown: 'Dropdown',\r\n        submenu: 'Submenu',\r\n        multiLevel: 'Multi Level',\r\n        collapsed: 'Collapsed',\r\n        rtl: 'RTL',\r\n        image: 'Background image',\r\n        new: 'NEW',\r\n        withPrefix: 'With Prefix',\r\n        withSuffix: 'With Suffix',\r\n        viewSource: 'View Source',\r\n    },\r\n};","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\home\\HomeScreen.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\shared\\Header.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\users\\NewUserScreen.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\dynamics\\FormScreen.js",["125"],"import React, {Fragment, useState} from 'react';\r\nimport {\r\n    Button, Grid, InputLabel, TextField, FormHelperText, RadioGroup,\r\n    FormControlLabel, Checkbox, MenuItem, Box, FormControl, FormLabel,\r\n    Radio\r\n} from \"@material-ui/core\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport commonValidators from \"../../../utils/commonValidators\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n}));\r\n\r\nconst typeText = [\r\n    'text',\r\n    'email',\r\n    'number',\r\n    'password'\r\n]\r\n\r\nconst defaultSize = {\r\n    xs: 12,\r\n    md:6,\r\n    lg:3\r\n}\r\n\r\nfunction FormScreen(props) {\r\n\r\n    let jsonState = {};\r\n    let errors = {};\r\n    props.entity.forEach( elem => {\r\n        if(typeText.indexOf(elem.type) >= 0)\r\n            jsonState[elem.name] = '';\r\n        else if(elem.type === 'checkbox')\r\n            jsonState[elem.name] = false;\r\n        else if (elem.type === 'date' || elem.type === 'time')\r\n            jsonState[elem.name] = new Date();\r\n        else\r\n            jsonState[elem.name] = '';\r\n\r\n        errors[elem.name] = false;\r\n    });\r\n\r\n    const [state, setState] = useState(jsonState);\r\n    const [errorState, setErrorState] = useState(errors);\r\n    const classes = useStyles();\r\n\r\n    const switchValidate = (validators, validations, name, value) => {\r\n        validations.forEach(validate => {\r\n            switch (validate) {\r\n                case 'email' :\r\n                    validators[name] = !commonValidators.emailValidate(value);\r\n                    setErrorState(validators);\r\n                    break;\r\n                case 'letter':\r\n                    validators[name] = !commonValidators.letterValidate(value);\r\n                    setErrorState(validators);\r\n                    break;\r\n                case 'number':\r\n                    validators[name] = !commonValidators.numberValidate(value);\r\n                    setErrorState(validators);\r\n                    break;\r\n                default:\r\n                    console.log(\"validador no encontrado\");\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        //exec validations\r\n        const validations = props.entity.find(x => x.name === event.target.name)?.validator;\r\n        if(validations !== undefined) {\r\n            let validators = {...errorState};\r\n            switchValidate(validators, validations, event.target.name, event.target.value);\r\n        }\r\n\r\n        let currentState = {...state};\r\n        if(event.target.type === 'date' || event.target.type === 'time')\r\n            currentState[event.target.name] = new Date(event.target.value);\r\n        if(event.target.type === 'checkbox')\r\n            currentState[event.target.name] = event.target.checked;\r\n        else\r\n            currentState[event.target.name] = event.target.value;\r\n\r\n        setState(currentState);\r\n    }\r\n\r\n    const handleSubmit = (event, state) => {\r\n        event.preventDefault();\r\n        alert(\"interno\");\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                props.title &&\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    {props.icon}\r\n                    <h2 className=\"title-eco ml-1\">{props.title}</h2>\r\n                </Grid>\r\n            }\r\n\r\n            <form className={classes.root}\r\n                  onSubmit={(e) =>\r\n                      props.handleSubmit !== undefined ? props.handleSubmit(e, state) : handleSubmit(e, state)}>\r\n                <Grid container spacing={2}>\r\n                    {\r\n                        props.entity.map((element, index) => (\r\n                            <Grid key={index} item\r\n                                  xs={element.size?.xs || defaultSize.xs}\r\n                                  md={element.size?.md || defaultSize.md}\r\n                                  lg={element.size?.lg || defaultSize.lg}>\r\n                                {\r\n                                    typeText.indexOf(element.type) >= 0 &&\r\n                                    <Fragment>\r\n                                        {/*<InputLabel htmlFor={element.name + index}>{element.label}</InputLabel>*/}\r\n                                        <TextField fullWidth={true} type={element.type}\r\n                                                   error={errorState[element.name]}\r\n                                                   value={state[element.name]}\r\n                                                   onChange={handleChange}\r\n                                                   label={element.label}\r\n                                                   required={element.required}\r\n                                                   name={element.name} id={element.name + index}\r\n                                                   inputProps={{\r\n                                                       maxLength: 50,\r\n                                                   }}\r\n                                                   aria-describedby={element.name + \"helper-text\" + index}/>\r\n                                        <FormHelperText id={element.name + \"helper-text\" + index}>\r\n                                            {element.info}\r\n                                        </FormHelperText>\r\n                                    </Fragment>\r\n                                }\r\n                                {\r\n                                    element.type === 'checkbox' &&\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox name={element.name} value={state[element.name]}\r\n                                                      error={errorState[element.name]}\r\n                                                       onChange={handleChange}\r\n                                                       />}\r\n                                        label={element.info}\r\n                                    />\r\n                                }\r\n                                {\r\n                                    element.type === 'select' &&\r\n                                    <TextField\r\n                                        id={element.name + index}\r\n                                        error={errorState[element.name]}\r\n                                        select\r\n                                        label=\"Seleccione ...\"\r\n                                        name={element.name}\r\n                                        datatype={element.type}\r\n                                        value={state[element.name]}\r\n                                        onChange={(event) => handleChange({\r\n                                            target: {type: \"select\", value: event.target.value, name: event.target.name}\r\n                                        })}\r\n                                        helperText=\"Please select your currency\"\r\n                                        required={element.required}\r\n                                    >\r\n                                        {element.values.map((option) => (\r\n                                            <MenuItem key={option.value} value={option.value} type=\"select\">\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                }\r\n\r\n                                {\r\n                                    element.type === 'autocomplete' && element.values !== undefined &&\r\n                                    <Autocomplete\r\n                                        id={element.name + index}\r\n                                        error={errorState[element.name]}\r\n                                        options={element.values}\r\n                                        getOptionLabel={(option) => option.label||\"\"}\r\n                                        inputValue={state[element.name]}\r\n                                        onInputChange={(event, newInputValue) => {\r\n                                            handleChange({ target: { value: newInputValue, type:\"autocomplete\", name: element.name } })\r\n                                        }}\r\n                                        renderInput={(params) =>\r\n                                            <TextField {...params} label={element.info}\r\n                                                       required={element.required}\r\n                                                       variant=\"standard\" />\r\n                                        }\r\n                                    />\r\n                                }\r\n\r\n                                {\r\n                                    element.type === 'date' &&\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker\r\n                                            id={element.name + \"date-picker-dialog\" + index}\r\n                                            label=\"Date picker dialog\"\r\n                                            format=\"dd/MM/yyyy\"\r\n                                            value={state[element.name]}\r\n                                            onChange={(value) => handleChange({ target: { value, type:\"date\", name: element.name } })}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                            required={element.required}\r\n                                            maxDate={state[element.maxDate] || element.maxDate}\r\n                                            minDate={state[element.minDate] || element.minDate}\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                }\r\n\r\n                                {\r\n                                    element.type === 'time' &&\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardTimePicker\r\n                                            id={element.name + \"time-picker\" + index}\r\n                                            label=\"Time picker\"\r\n                                            value={state[element.name]}\r\n                                            onChange={(value) => handleChange({ target: { value, type:\"time\", name: element.name } })}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'Cambiar Hora',\r\n                                            }}\r\n                                            required={element.required}\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                }\r\n\r\n                                {\r\n                                    element.type === 'radio' &&\r\n                                    <FormControl component=\"fieldset\">\r\n                                        <FormLabel component=\"legend\">{element.label}</FormLabel>\r\n                                        <RadioGroup aria-label={element.label} name={element.name}\r\n                                                    value={state[element.name]} onChange={handleChange} row>\r\n                                            {\r\n                                                element !== null && element.values !== null &&\r\n                                                element.values.map((x, index) => (\r\n                                                    <FormControlLabel\r\n                                                        key={index}\r\n                                                        value={x.value}\r\n                                                        control={<Radio color=\"primary\" required={element.required} />}\r\n                                                        label={x.label}\r\n                                                        labelPlacement=\"bottom\"\r\n                                                    />\r\n                                                ))\r\n                                            }\r\n                                            {/*<FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" />*/}\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                }\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n\r\n                <Grid container justify=\"flex-end\">\r\n                    <Box mt={4}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Guardar</Button>\r\n                        <Button type=\"button\" className=\"ml-1\" variant=\"contained\">Cancelar</Button>\r\n                    </Box>\r\n                </Grid>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FormScreen;","C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\events\\manageEvents.js",["126","127"],"import {useState} from \"react\";\r\n\r\nconst valueInputs = ['text', 'number', 'email'];\r\n\r\nconst ManageEvents = ({initialState}) => {\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const onchangeEntity = (event) => {\r\n        try {\r\n            if (event.target.type !== undefined) {\r\n                let currentState = {...state};\r\n                if(valueInputs.indexOf(event.target.type) >= 0)\r\n                    state[event.target.name] = event.target.value;\r\n                else if(event.target.type === 'checkbox')\r\n                    state[event.target.name] = event.target.checked;\r\n                setState(currentState);\r\n            } else\r\n                console.error(\"Evento no valido para el tipo de control\");\r\n        } catch (ex) {\r\n            console.error(ex);\r\n        }\r\n    }\r\n\r\n    const getValue = (event) => {\r\n        return state[event.target.name];\r\n    }\r\n\r\n}\r\n\r\nexport default ManageEvents;",["128","129"],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\utils\\commonValidators.js",[],"C:\\Users\\dvalbuena\\Documents\\Proyectos\\PasaporteDigitalFront2.0\\pasaportedigitalfront\\src\\infrastructure\\components\\auth\\LoginScreen.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":11,"column":12,"nodeType":"136","messageId":"137","endLine":11,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":43,"column":9,"nodeType":"140","messageId":"141","endLine":43,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":26,"column":1,"nodeType":"144","endLine":86,"endColumn":2},{"ruleId":"145","severity":1,"message":"146","line":67,"column":63,"nodeType":"147","messageId":"148","endLine":67,"endColumn":80,"fix":"149"},{"ruleId":"142","severity":1,"message":"150","line":1,"column":1,"nodeType":"144","endLine":37,"endColumn":3},{"ruleId":"134","severity":1,"message":"151","line":3,"column":19,"nodeType":"136","messageId":"137","endLine":3,"endColumn":29},{"ruleId":"134","severity":1,"message":"152","line":9,"column":11,"nodeType":"136","messageId":"137","endLine":9,"endColumn":25},{"ruleId":"134","severity":1,"message":"153","line":25,"column":11,"nodeType":"136","messageId":"137","endLine":25,"endColumn":19},{"ruleId":"130","replacedBy":"154"},{"ruleId":"132","replacedBy":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'usersEffect' is assigned a value but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-whitespace-before-property","Unexpected whitespace before property userDelete.","MemberExpression","unexpectedWhitespace",{"range":"158","text":"159"},"Assign object to a variable before exporting as module default","'InputLabel' is defined but never used.","'onchangeEntity' is assigned a value but never used.","'getValue' is assigned a value but never used.",["156"],["157"],"no-global-assign","no-unsafe-negation",[1800,1802],"."]